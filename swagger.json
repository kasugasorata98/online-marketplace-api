{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Online Marketplace API",
    "description": "Online Marketplace API",
    "license": {
      "name": "Jeromy Kho",
      "url": "https://kasugasorata.monster"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Stores",
      "description": "API for user to create stores"
    },
    {
      "name": "Products",
      "description": "API for user to create/get products"
    },
    {
      "name": "Payments",
      "description": "API for user to create/get payments"
    },
    {
      "name": "Address",
      "description": "API for user to create/get addresses"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a user",
        "description": "Endpoint to register a new user",
        "responses": {
          "201": {
            "description": "Successful registration",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login a user",
        "description": "Login a user with their username and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user information",
        "description": "Retrieves user information for the user associated with the passed JWT token",
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "addressses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/stores": {
      "post": {
        "tags": ["Stores"],
        "summary": "Create a new store",
        "description": "Create a new store with the given name and image",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Store information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the store"
                },
                "image": {
                  "type": "string",
                  "description": "Image of the store"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "ID of the store"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the store"
                },
                "image": {
                  "type": "string",
                  "description": "Image of the store"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Timestamp of store creation"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Timestamp of last store update"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "description": "Create a new product and add it to the store",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The ID of the store to which the product will be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "storeId": {
                  "type": "string",
                  "description": "ID of the store"
                },
                "title": {
                  "type": "string",
                  "description": "Title of the product"
                },
                "price": {
                  "type": "number",
                  "description": "Price of the product"
                },
                "details": {
                  "type": "string",
                  "description": "Details of the product"
                },
                "image": {
                  "type": "string",
                  "description": "Image of the product"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "details": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "store": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get a list of products",
        "description": "This endpoint retrieves a list of products based on the search query and page number provided in the query parameters",
        "tags": ["Products"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search string to search for products by title or details",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve products for",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of products returned",
            "required": false,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "details": {
                        "type": "string"
                      },
                      "store": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/payment": {
      "post": {
        "tags": ["Payments"],
        "summary": "Create a new payment method",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "Type of the payment method",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Type of payment method"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created payment method",
            "schema": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "_id": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": ["Payments"],
        "summary": "Get all payment methods",
        "operationId": "getPaymentMethods",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "properties": {
                "paymentMethods": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/address": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Add address information",
        "responses": {
          "200": {
            "description": "Address added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "unitNo": {
                  "type": "string"
                },
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zipCode": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Address information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "unitNo": {
                  "type": "string"
                },
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zipCode": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Address"]
      },
      "get": {
        "tags": ["Address"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get addresses of a user",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "addresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "string"
                      },
                      "unitNo": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zipCode": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  }
}
